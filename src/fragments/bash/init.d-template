#!/bin/bash

# QSys Initscript Template

# === SysVInitScript Headers ================================================
#! See http://fedoraproject.org/wiki/Packaging/SysVInitScript
#!    for details on parameters for the header sections

# --- chkconfig header ---
# <daemonname> <summary>
#
# chkconfig:   <default runlevel(s)> <start> <stop>
#! NOTE: common setting -> chkconfig: 2345 80 20
# description: <description, split multiple lines with \
#              a backslash>

# --- LSB header ---
### BEGIN INIT INFO
# Provides: <daemonname>
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Default-Start:
# Default-Stop: 0 1 2 3 4 5 6
# Short-Description: start and stop <daemon>
# Description: <description>
### END INIT INFO

# === Configuration and Preparation =========================================

# --- source core functions ---
#! TODO: create a local version of this file, perhaps based on /lib/lsb/init-functions?
source /etc/rc.d/init.d/functions

# --- global variables ---
exec="/path/to/<daemonname>"
prog="<service name>"
config="<path to major config file>"
lockfile=/var/lock/subsys/$prog
pidfile=/var/run/$prog.pid

# --- make sure certain directories exist ---
[ ! -d /var/lock/subsys ] && mkdir -p /var/lock/subsys
[ ! -d /var/run ]         && mkdir -p /var/run

# --- load sysconfig if it exists ---
[ -e /etc/sysconfig/$prog ] && source /etc/sysconfig/$prog

# === Service Management ====================================================
# --- start the service ---
start() {
	# --- check to make sure program and config exist ---
	[ -x $exec ] || exit 5
	[ -f $config ] || exit 6

	# --- start the program ---
	echo -n $"Starting $prog: "
	#! Put the start command here command here
	#!    example: daemon --pidfile $pidfile $prog
	retval=$?
	echo

	# --- create the lockfile and pidfile ---
	if [ $retval -eq 0 ]; then
		touch $lockfile
		#! Create the pidfile here if it's not already created
		#!    example: pgrep -f SOME_UNIQUE_STRING > $pidfile
	fi

	return $retval
}

# --- stop the service ---
stop() {
	# --- stop the program ---
	echo -n $"Stopping $prog: "
	#! Put the stop command here command here
	#!    example:killproc -p $pidfile $prog
	retval=$?
	echo

	# --- remove the lockfile and return ---
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

# --- combined commands ---
restart()      { stop; start; }
reload()       { restart; }
force_reload() { restart; }

# --- check status of daemon, verbose and quiet ---
rh_status()   { status -p $pidfile $prog; }
rh_status_q() { rh_status >/dev/null 2>&1; }

# === Main Body of Code =====================================================
case "$1" in
	start)
		rh_status_q && exit 0
		$1
		;;
	stop)
		rh_status_q || exit 0
		$1
		;;
	restart)
		$1
		;;
	reload)
		rh_status_q || exit 7
		$1
		;;
	force-reload)
		force_reload
		;;
	status)
		rh_status
		;;
	condrestart|try-restart)
		rh_status_q || exit 0
		restart
		;;
	*)
		echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
		exit 2
esac
exit $?
